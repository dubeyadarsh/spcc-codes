def SubExpressionEle(Code):
    print('___SUBEXPRESSION ELIMINATION___')

    print('Code Befor Optimization.........')
    for i in Code:
        print(i)
    
    LeftExpression = []
    RightExpression = []
    CommonExpression = []
    CommonExpressionDict = { }
    Ans = []

    for i in Code:
        SplitExpression = i.split('=')
        if SplitExpression[1] not in RightExpression:
            LeftExpression.append(SplitExpression[0])
            RightExpression.append(SplitExpression[1])
        else:
            CommonExpression.append(SplitExpression[0])
            Index = RightExpression.index(SplitExpression[1])
            CommonExpressionDict[SplitExpression[0]] = LeftExpression[Index]
    for i in RightExpression:
        for j in CommonExpression:
            if j in i.split(" "):
                i = i.replace(j, CommonExpressionDict[j])
        Ans.append(i)
    ZipCode = zip(LeftExpression, Ans)

    print('Code After Optimization.....')
    for x, y in ZipCode:
        print(str(x) + "=" + str(y))


if __name__ == '__main__':
    Code = []
    for i in range(int(input('Enter Number Of Lines: '))):
        Code.append(input('Enter Code Expression: '))
    SubExpressionEle(Code)
